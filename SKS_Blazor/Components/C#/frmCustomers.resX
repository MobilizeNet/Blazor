<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>785, 17</value>
  </data>
  <data name="txtField.Location" type="System.Drawing.Point, System.Drawing">
    <value>873, 17</value>
  </data>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACK
        EQAAAk1TRnQBSQFMAgEBBgEAAQoBAAEIAQABEAEAARABAAT/ARkBEAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGBIAJP8C9AH1ATQBOgFHATQBOgFHAYMBhwGND/8GwAaABsAP/2AAIf8B8gLz
        ATQBOgJHAVQBfAE5AXkBzwFHAYABrQn/A8ACAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wPA
        Cf9gAB7/AvQB9QE0AToCRwFUAXwBOQF5Ac8BVwG0AeoBewGXAaoG/wPAAgAB/wIAAf8DwAz/A8ACAAH/
        AgAB/wPABv9gABv/AfMC9AE0AToCRwFUAXwBOQF5Ac8BVwG0AeoBewGXAaoG/wPAAgAB/wIAFv8CAAH/
        AgAB/wIAAf8DwAP/YAAb/wE0AToCRwFUAXwBOQF5Ac8BVwG0AeoBewGXAaoJ/wIAAf8CABb/AgAB/wIA
        Af8DgAIAAf8CAAT/YAAG/wHZAdABygGtAZgBjQGeAYUBeAGYAX8BcQGaAYIBdAGnAZIBhwE0AToCRwFU
        AXwBOQF5Ac8BVwG0AeoBewGXAaoM/wIAAf8DgBL/AgAB/wIAAf8DgAP/A4ACAAH/A8BgAAP/AcoBvAGz
        AakBkQGCAbgBogGIAeQB0QGiAfYB5gGuAdIBvQGZAacBjwF5AZIBeAFqAWUBdwGaAVcBtAHqAXsBlwGq
        DP8DwAIAAf8DwA//AgAB/wIAAf8DgAb/A8ACAAH/A8BgAAHdAdUBzwGxAZsBjAHpAdUBpwH/AfIBtAH/
        AesBsQH/Ae0BwQH/AfcB1gH/Af0B1wHMAbICkQF5AW0BewGXAaoP/wPAAgAQ/wIAAf8CAAH/A4AM/wIA
        Af8DgGAAAcABrgGhAdABvQGgAf8B8AG4Af8B5gGzAf8B5AG0Af8B3QGpAf8B4gGvAf8B8gHUAf8B/QHX
        AawBkQF6AZgBhQF+D/8DwAIADf8CAAH/AgAB/wOAD/8CAAH/A8BgAAHAAawBnAHvAd8BswH/AfEBxAH/
        AfEBzwH/AfYB0wH/AfIByAH/AeMBrwH/AeABrQH/AfYB0wHZAcQBmwGYAX8Bcw//A8ACAAH/A8AG/wIA
        Af8CAAH/A4AP/wPAAgAB/wPAYAABxAGxAaIB/gHxAboB/wH5AdwB/wH6AegB/wH6AeUB/wH4AdsB/wHy
        AcgB/wHdAakB/wHsAbsB9QHkAa0BlgF8AW4S/wIAAf8CAAT/AgAB/wIAAf8DgBL/A4ACAAT/YAABzAG8
        AasB9AHqAc0B/wH7AewB/wH9AfgB/wH9AfYB/wH6AeYB/wH2AdMB/wHlAbIB/wHqAa4B3wHMAZ4BmwGC
        AXQS/wOAAgAB/wIAAf8CAAH/A4AS/wPAAgAB/wIABP9gAAHTAcMBtQHhAdQBwQH/Af4B8wH/Af0B9QH/
        Af0B9QH/AfoB6gH/AfIB0QH/AeUBsQH/AfEBswG0AZsBgwGqAZQBiRX/AgAB/wIAAf8CABP/A8ACAAH/
        AgAH/2AAAeQB2gHSAdcByAG3AfUB8AHbAf8B+gHeAf8B+QHfAf8B+AHaAf8B8QHLAf8B8AG4AeYB1AGl
        AaIBigF7AdkBzwHKGP8CAAH/AgAB/wIAAf8MwAIAAf8CAAH/AgAB/wPABv9gAAP+AdsBzwHDAdIBwwGz
        AeUB1gG7AfMB6AHEAf0B8wHMAewB3wG6AcgBtgGaAaoBkwGDAcUBtgGuHv8DgAIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wOADP9gAAP/Af4C/QHiAdgB0AHOAb0BrgHDAbIBogG7AaYBlwG3AaEBkgG5AaYBmAHa
        AdEByif/DMAS/2AAMP8DHAOTA+i3/wPBAxwCVgFVAZYBlAGTAecC5iT/Ae8BzgHPAcMBZAFlAaoBVQFW
        AaQBUgFTAZ8BTwFQAZoCTQGUAkoBjwJHAYkCRAGDAkEBeAE7ATwBeAE7ATwBcgI5AW4BNgE3Qv8BMAFc
        ATcBKQFSATEBJwFPAS8BJgFNAS4BNAFaATsV/wOkAecB3QHYAUABPAE6AS8BLAEqAWYBbAFuAe8B8gHz
        A/4b/wHPAWsBbAHzAY4BjwHmAYABgQGqAUQBJAFHATIBIQHDAbQBqwHGAbsBswHKAcEBvAHOAcgBxAFW
        AU0BSAGeAT4BMwGcAT0BNgGYATkBMQFyAjkG/wHRAdcB/wF4AYwB/wHFAc4B/wHzAfUB/wL+EP8B+wH8
        Af8B9gH3Gf8BMAFhATgBMgGaAU8BLAGWAUkBJQGSAUQBNwFeAT4V/wHbAdkB1wGZAZYBkgHnAd0B2AFo
        AaEBtAElAVQBZQE5ATwBQAHsAfEB8xv/AdEBbwFwAf8BmQGaAewBhgGHAeYBgAGBAXEBWwFLAUcBPAE0
        AY0BeAFoAe0B4AHYAfEB5wHgAY8BfwFzAaMBQQE1AaIBQgE8AZwBPQE1AXgBOwE8A/8B+QH6Af8BgwGW
        Af8BDAEoAeEBMAFGAdsB3AHhAf8C/Q3/AfwB/QH/AWoBfgH2Ac4B1QH/Av0W/wE3AWsCPwGiAVkBOAGd
        AVQBMQGaAU4BOgFnAUIY/wG8AbMBrQGDAbcBwwGgAeAB8AFcAcAB2wEuAWEBcwE9AUMBSAHiAeUB5xj/
        AdQBdQF2Af8BnwGgAfUBkAGRAewBhgGHAXEBWwFLAwABRwE8ATQB6QHZAc4B7AHdAdQBhQF0AWcBrgFL
        AUMBqgFJAUQBowFCATwBfQI+Bv8BuQHEAf8BFgE3AfYBCQEiAdEBVwFoAeEB9QH2Cv8C/QH/Ad4B4gH/
        AQ8BJQHCAcsB0QH2Av0W/wE5AXMBQQFNAasBZgFFAaYBXwE9AaEBWAE9AW0BRRj/AdoB5wHrAWcBpwG2
        AbIB8gH9AYcB2QHsAVwBwAHbAS0BWgFpAVEBVQFZAdYB3gHhFf8B1wF7AXwB/wGpAaoB+wGfAaAB9QGT
        AZQBcQFbAUsBcQFbAUsBcQFbAUsBcQFbAUsBdgFiAVIBfQFqAVsBugFWAVQBsgFPAUwBqgFJAUQBgwJB
        Bv8B+AH5Af8BYwF6Af8BIQFCAf8BFgEsAdABrwG2Ae4G/wH4AfkB/wHyAfQB/wEuAUcB5wFOAWAB4QHi
        AeQB9gH3AfgK/wFQAY4BVwFpAZ0BbwFoAZsBbgFrAZsBcAE/AXwBRgFbAbQBcQFTAa8BagFLAaoBZAE1
        AWsBPQE0AWgBPAEzAWcBOwEyAWQBOQEwAWABOA//AdoB5wHrAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHb
        ASoBVAFjAVwBawFxAd8B5QHnEv8B2wGDAYQB/wGzAbQB/wGtAa4B/AGjAaQB9AGOAY8B7AGGAYcB5gGA
        AYEB3wF5AXoB1wFxAXIB0QFrAWwBwQFdAVwBugFWAVQBsgFQAUwBiQJECf8B6QHsAf8BQgFeAf8BIAFB
        AfQBLQFDAdsBwAHFAe4B9QH2Af8B9QH2Af8BcwGHAf8BDQElAdEBzQHSAfYP/wFRAZ8BWAGFAc8BlAF/
        AcoBjwF3AcYBiQFwAcEBgwFpAb0BfQFhAbgBdgFZAbMBcAFRAa4BagFJAakBYwFCAaUBXAE7AZ8BVgE4
        AXABQBL/AdEB3wHkAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHbASgBTgFaASsBPgFHAeEB5wHpD/8B3wGK
        AYsB/wG7AbwB/wG2AbcByQFjAWABxAFeAVYBvgFYAUsBuAFSAT8BswFNATQBrQFHASgBpwFBARwBoQE7
        AREBwQFdAVwBugFWAVQBjwJHCf8C/QH/AeIB5gH/ATkBVgH/ARsBPQH/AU0BYwHuAc8B1gH/AVYBbwH/
        AQ4BLAHpAZ0BrAH/Av4N/wH8AvsBVQGoAV0BjwHVAZwBigHRAZgBhAHNAZMBfQHKAY4BdgHGAYgBbgHA
        AYIBZwG7AXwBXwG3AXUBWAGyAW4BUAGtAWcBSAGoAWEBPgF6AUYV/wHWAeIB5wFnAacBtgGyAfIB/QGH
        AdkB7AFcAcAB2wEqAVEBXwElATcBPwHgAegB6wH9Av4J/wHiAZEBkgH/Ab0BvgHMAWYBZwb/AfsB+AL2
        Ae4B6gHwAeUB3gHqAdsB0gHlAdEBxgHhAcoBvQGhATsBEQHCAV0BXAGUAkoP/wHhAeYB/wE8AVkB/wET
        ATYB/wEQATEB9gEOATEB8wE0AVIT/wH7AfoB+QFaAbABYQGXAdoBowGTAdgBoAGOAdQBnAGIAdABlwGD
        AcwBkgF7AckBjAF1AcQBhwFtAcABgQFlAbsBegFeAbYBcwFWAbEBbQFDAYUBShj/AdkB5AHpAWcBpwG2
        AbIB8gH9AYcB2QHsAVwBwAHbAS0BWgFpASIBMwE7AeYB7AHvAf0C/gb/AeUBlwGYAf8BvQG+AdMBbQFu
        Cf8B+wH4AvYB7gHqAfAB5QHeAeoB2wHSAeUB0QHGAacBQQEcAcwCZwGaAk0S/wHEAcwB/wE4AVYB/gEt
        AU0B/gExAU8B/wHuAfET/wH7AfoB+QFZAasBYAFYAaoBXgFWAacBXQFVAaYBXQFXAaoBXgGNAdMBmwGH
        Ac8BlwGBAcwBkQFPAZsBVwFtAacBcwFtAaQBcwFLAY4BUwFIAYoBTxv/AdkB5AHpAWcBpwG2AbEB8gH9
        AYcB2gHsAVwBwAHbATABZAF0ASEBMgE6AeoC7wb/AekBngGfAf8BvQG+AdwBdgF3DP8B+wH4AvYB7gHq
        AfAB5QHeAeoB2wHSAa0BRwEoAdcBcQFyAZ8BTwFQDP8C/gH/AdkB3wH/AT8BWwH/AUYBYgH+ATIBUAH+
        ATgBVQH+AV0BdQH/AfcB+Bz/Af0B/AH7AVcBqwFeAZUB2QGiAZEB1gGeAYwB0gGaAVEBngFYAf0C/Cf/
        AdYB4gHnAWcBpwG2AbIB8gH9AYcB2QHsAVwBwAHbAS8BYgFyAjUBkAHVAdcB5gP/Ae0BpgGnAf8BvQG+
        AeYBgAGBD/8B+wH4AvYB7gHqAfAB5QHeAbMBTQE0Ad8BeQF6AaQBUgFTCf8B+QH6Af8BlwGmAf8BKAFJ
        Af4BNAFTAf4BZQF8Af8B1AHbAf8BdgGLAf8BOwFZAf4BdgGLAf8B8QHzGf8B/QH8AfsBWgGuAWIBmQHb
        AaUBmQHaAaQBlAHYAaIBVAGkAVsB/QL8Kv8B1AHgAeUBZwGnAbYBsgHzAf0BuQG7AbYBfQKGAU8BUgGi
        AjUBkAP/AfABrAGtAf8BvQG+Ae8BiQGKEv8B+wH4AvYB7gHqAbgBUgE/AWcCMwGqAVUBVgP/AegB6wH/
        AcsB0wH/AVYBbwH/ATQBUwH+ATsBWQH+AVoBcwH/AfUB9gT/AfcB+AH/AWUBewH+ATcBVgH+AX4BkQH/
        AfQB9Rn/AV0BtQFkAZkB2wGlAZkB2wGlAZkB2wGlAWkBtQFwAf8C/i3/AdMB4QHmAWcBpwG2AbUBqwGh
        AXcBlAHtAWsBgwHWAUABQwGZA/8B8wGyAbMB/wG9Ab4B+AGSAZMV/wH7AfgB9gG+AVgBSwGwAVgBWQGw
        AVgBWQP/AaQBsQH/AVYBbwH/AUYBYgH+AUgBZAH+AY4BngH/AfwB/Qr/AfgB+QH/AcIBywH/AUUBYQH+
        AW4Bgxn/AV0BsgFjAWIBvwFpAWIBvwFpAWEBvgFoAWoBtgFxM/8B0AHZAeUBXQFpAbYBlQGuAfgBdAGR
        AegBSQFQAaED/wH1AbYBtwH1AbYBtwHzAbIBswHxAa0BrgHuAacBqAHqAaEBogHnAZoBmwHkAZMBlAHg
        AY4BjwHdAYcBiAHaAYABgQHWAXoBewHTAXQBdQHRAW8BcAP/AZ8BrQH/AUsBZgH+AUYBYQH+AbQBvwH/
        AfwB/RD/AfsB/AH/Ad8B5AH/AZkBqF7/AccBzgHoAVIBXAGkAVMBXQGlAekB7AH1MP8B0gHZAf8BUAFq
        Af8BwgHLAf8C/SX/AUIBTQE+BwABPgMAASgDAAFAAwABIAMAAQEBAAEBBgABARYAA///ABgACw==
</value>
  </data>
</root>